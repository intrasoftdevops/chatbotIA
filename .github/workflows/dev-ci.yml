name: ChatbotIA Dev CI/CD

on:
  push:
    branches: [ dev ]
  pull_request:
    branches: [ dev ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-asyncio pytest-cov
    
    - name: Lint with flake8
      run: |
        pip install flake8
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    
    - name: Test with pytest
      env:
        GOOGLE_API_KEY: ${{ secrets.GOOGLE_API_KEY_DEV }}
        INDEX_DIR: storage
        LLM_MODEL: models/gemini-1.5-flash
        EMBEDDING_MODEL: models/embedding-001
      run: |
        pytest tests/ --cov=. --cov-report=xml --cov-report=html || echo "No tests found yet"
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  build:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/dev'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Login to Google Container Registry
      uses: docker/login-action@v3
      with:
        registry: gcr.io
        username: _json_key
        password: ${{ secrets.GCP_SA_KEY_DEV }}
    
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: |
          gcr.io/${{ secrets.GCP_PROJECT_ID_DEV }}/chatbotia-dev:latest
          gcr.io/${{ secrets.GCP_PROJECT_ID_DEV }}/chatbotia-dev:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/dev'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Google Cloud CLI
      uses: google-github-actions/setup-gcloud@v1
      with:
        service_account_key: ${{ secrets.GCP_SA_KEY_DEV }}
        project_id: ${{ secrets.GCP_PROJECT_ID_DEV }}
    
    - name: Deploy to Cloud Run (Dev)
      run: |
        gcloud run deploy chatbotia-dev \
          --image gcr.io/${{ secrets.GCP_PROJECT_ID_DEV }}/chatbotia-dev:${{ github.sha }} \
          --platform managed \
          --region us-east1 \
          --allow-unauthenticated \
          --set-env-vars ENVIRONMENT=development \
          --set-env-vars GOOGLE_API_KEY=${{ secrets.GOOGLE_API_KEY_DEV }} \
          --set-env-vars INDEX_DIR=storage \
          --set-env-vars LLM_MODEL=models/gemini-1.5-flash \
          --set-env-vars EMBEDDING_MODEL=models/embedding-001 \
          --port 8000 \
          --memory 1Gi \
          --cpu 1 \
          --timeout 300s \
          --max-instances 10 \
          --min-instances 0